;
; PI_xJoyMap.py Example main configuration file 
;
; xJoyMap  doesn't check config parameters so bad parameters will hang 
; the plugin and maybe x-plane (sorry for that)
;
; GENERAL SYNTAX:
;
; [Section Name]
; parameter1 = value
; parameter2 = value
;
; The Section Name MUST BE UNIQUE for each assignment 
; it will appear as the command description in the  
; joystick & equipment -> Buttons: Adv tab
;
; xJoyMap will detect the mode of operation according to the parameters
; defined in each section. In future releases maybe a mode parameter
; will be required 
;
; MODE                        required parameters             optional params
; -----------------------------------------------------------------------------------
; axis2dataref:               axis dataref range              type, release, round
; button2dataref incremental  new_command dataref increment   type
; button2dataref toggle:      new_command dataref values      type
; buttonAlias:                new_command main_command        shifted_command
; constant                    constant_*
;
; == Future plans ==
; button2dataref switch       new_command dataref on_value off_value

; ==============================
; Axis to dataref examples
; ==============================

;
; Assigns axis 4 to the map range switch
;
; axis:     joy axis
; dataref:  Dataref value to interact with:
;           You can modify a dataref array specifying the range of the array, or a single index:
;           examples: dataref=non/array/dataref           ; non array dataref
;                     dataref=some/array/dataref[1:2]     ; array modify values from 1 to 2
;                     dataref=some/array/dataref[2]       ; array dataref modify value 2
;
; range:    Dataref range, joyOverrides will assign values from 0 to 6 to the dataref
; 

[EFIS Map Range]
axis=4
dataref=sim/cockpit/switches/EFIS_map_range_selector
range=6

;
; Select vertical velocity with the axis 5
;
; range: for negative ranges joyOverrides will assign values from -range to +range
; ex: -4000 for values from -4000 to 4000
;     4000 for values from 0 to 4000
;
;     Note: if you need more ranges tell me a good reason and i will fix-it
;
; type: Dataref type: float or int by default
;       Check http://www.xsquawkbox.net/xpsdk/docs/DataRefs.html to know the type of your Dataref
;
;       BUG: At the moment xJoyMap will only assign integer values to float values ;-P
;            so if you set a 1.45 it will write 1 to the dataref float value.
;
; release: Soft release range to retake control if the value is changed externally 
;          usually by the autopilot. Otherwise xJoyMap will force the joy value
;
; round:   Sometimes datarefs are rounded by the sim. Assign a round value otherwise
;          the rounding will be detected as an autopilot intervention.  

[Vertical Speed]
axis=5
dataref=sim/cockpit/autopilot/vertical_velocity
range=-4000
type=float
release=200
round=100

[Mixture ratio]
axis=5
dataref=sim/cockpit2/engine/actuators/mixture_ratio[1:2](float)
range=50
type=float
release=4

; ==============================
; Button Alias examples
; ==============================

;
; Creates a new "virtual command" at sim/xjoymap/NAV_APP
; that triggers sim/autopilot/NAV 
; or sim/autopilot/approach if the shift button is pressed
;
; You must assign your new created command and a shift button
; in the joystick & equipment -> Buttons: Adv tab
; it will appear at the bottom under sim/xjoymap/

[Nav App shifted]
new_command=NAV_APP
main_command=sim/autopilot/NAV
shifted_command=sim/autopilot/approach

;
; Same as above with vertical_peed and altitude_hold
;

[Alt Hold Vertical Speed shifted]
new_command=vpseed_althold
main_command=sim/autopilot/vertical_speed
shifted_command=sim/autopilot/altitude_hold

;
; Example combo command
;
; Creates the command LNAV_VNAV that triggers
; LNAV and VNAV simultaneously 
; 
; note: You can also define multiple shifted commands 

[LNAV VNAV toggle combo]
new_command=LNAV_VNAV
main_command=sim/autopilot/NAV, sim/autopilot/vnav

;
; That's a simple alias to engage the AP Heading
; It just calls the default X-plane Heading Command
;

[Heading engage]
new_command=Heading_Engage
main_command=sim/autopilot/heading

; ============================
; Button to dataref examples
; ============================

;
;  toggle mode
;

[Map range toggle]
new_command=map_range
dataref=sim/cockpit/switches/EFIS_map_range_selector
values = 0, 1, 2, 3, 4, 5, 6

[Map Mode toggle]
new_command=map_mode
dataref=sim/cockpit/switches/EFIS_map_submode
values = 0, 1, 2, 3, 4

;
; incremental mode
;

[Increment Heading]
new_command=heading_up
dataref=sim/cockpit/autopilot/heading_mag
description=Heading 
increment=1
type=float

[Decrement Heading]
new_command=heading_down
dataref=sim/cockpit/autopilot/heading_mag
description=Heading 
increment=-1
type=float

; CONSTATNS
;
; That's an special section should always be named "Constants"
; 
; It's useful to set some dataref values on X-Plane Startup or
; on plane changes
;
; You can name the parameters as you like to have a reference of what they do 
; but they must be UNIQUE
;
; SYNTAX
; name = dataref, value, type
;
; Note: type is optional defaults to int.
;       You can also specify the type embedded within the dataref name 
;       ex: setme_on_startup=some/fancy/dataref(type)

[Constants]
fov=sim/graphics/view/field_of_view_deg, 70, int
;watever=sim/graphics/some_fancy_array[1:2](float), 7

;
; UNDER DEVELOPMENT
;
; Button to dataref: switch-mode
; That will be useful for hardware switches
;
;[Lights switch]
;new_command=Lights
;dataref=sim/cockpit/electrical/landing_lights_on
;description=Landing ligths switch
;on_value = 1
;off_value = 0